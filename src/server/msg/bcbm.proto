syntax = "proto3";
package msg;

// 消息枚举
enum MessageID {
	MsgError             = 0;
	MsgPing              = 1;
	MsgPong              = 2;
	MsgLoginTest         = 3;
	MsgLogin             = 4;
	MsgLoginR            = 5;
	MsgLogout            = 6;
	MsgLogoutR           = 7;
	MsgRoomChangeHB      = 8;
	MsgJoinRoom          = 9;
	MsgJoinRoomR         = 10;
	MsgLeaveRoom         = 11;
	MsgLeaveRoomR        = 12;
	MsgGrabBanker        = 13;
	MsgAutoBet           = 14;
	MsgAutoBetR          = 15;
	MsgBet               = 16;
	MsgBetInfoB          = 17;
	MsgBankersB          = 18;
	MsgPlayersB          = 19;
	MsgRoomStatusB       = 20;
}

enum AreaID {
    _AreaID = 0;
    AreaID40x = 1;
    AreaID30x = 2;
    AreaID20x = 3;
    AreaID10x = 4;
    AreaID5x1 = 5;
    AreaID5x2 = 6;
    AreaID5x3 = 7;
    AreaID5x4 = 8;
}

enum ChipID {
    _ChipID = 0;
    ChipID1x = 1;
    ChipID10x = 2;
    ChipID100x = 3;
    ChipID500x = 4;
    ChipID1kx = 5;
}

enum RoomStatus {
    _RoomStatus = 0;
    RSBetting = 1;
    RSLottery = 2;
    RSClear = 3;
}

// 心跳
message Ping{}
message Pong{}

// 用户信息
message UserInfo {
    uint32 UserID = 1;
    double Money = 2;
    string Avatar = 3;
    string NickName = 4;
    double BetAmount = 5; // 下注数
    uint32 WinCount = 6; // 近20局获胜局数
}

// 房间信息
message RoomInfo {
    uint32 RoomID = 1;
    double MinBet = 2;    // 限红 下限
    double MaxBet = 3;    // 限红 上限
    double MinLimit = 4;  // 能玩的最低金币
    uint32 Status = 5;
    uint32 Counter = 6;   // 当前计时
    uint32 EndTime = 7;
    repeated uint32 History = 8;
    repeated uint32 Statistics = 9;
}

// 登录游戏
message Login {
    uint32 UserID = 1;
    string Password = 2;
}

// 测试登录
message LoginTest {
    uint32 UserID = 1;
}

message LoginR {
    UserInfo User = 1;
    uint32 RoomID = 2;
    repeated RoomInfo Rooms = 3;
    uint32 ServerTime = 4;  // 服务器时间
}

// 房间变化大厅广播
// Status = 2 表示 结算中 此状态时要显示 Result - 即最新的开奖结果
// Status = 1 表示 下注中 此状态时要显示进度条 - 用EndTime - ServerTime 可计算出进度条时长
message RoomChangeHB {
    uint32 RoomID = 1;
    uint32 Status = 2;                 // 改变之后的状态
    uint32 Counter = 3;                // 倒计时条
    uint32 EndTime = 4;                // 倒计时结束时间
    uint32 Result = 5;                 // 开奖结果
    repeated uint32 Statistics = 6;    // 统计
    uint32 ServerTime = 7;             // 服务器时间
}

// 登出游戏
message Logout {}

message LogoutR {}

// 加入房间
message JoinRoom {
    uint32 RoomID = 1;
}

message JoinRoomR {
    repeated UserInfo CurBankers = 1;  // 当前房间庄家信息
    repeated double Amount = 2;        // 当前房间下注信息
    repeated double PAmount = 3;       // 如果玩家是重新进入房间，需要玩家在该房间的下注信息
    repeated UserInfo Players = 4;     // 当前房间的玩家信息
    RoomInfo Room = 5;                 // 当前房间状态
    repeated uint32 History = 6;       // 历史记录
    uint32 ServerTime = 7;             // 服务器时间
}

// 下注
message Bet {
    uint32 Area = 1;      // 投注区域
    uint32 Chip = 2;      // 筹码
}

// 进入房间后房间状态广播，比大厅广播更细粒度
// 包含了清理筹码倒计时，以及结算结果
// 状态枚举在 enum RoomStatus
message RoomStatusB {
    uint32 Status = 1;                 // 改变之后的状态
    uint32 Counter = 2;                // 倒计时条已过的时间
    uint32 EndTime = 3;                // 倒计时结束时间
    uint32 Result = 4;                 // 开奖结果-如果是开奖状态的话
    double WinMoney = 5;               // 玩家赢数
    double PlayerMoney = 6;            // 玩家金币更新
    uint32 ServerTime = 7;             // 服务器时间
}

// 下注信息广播，收到投注请求即广播
message BetInfoB {
     uint32 Area = 1;        // 下注区域
     uint32 Chip = 2;        // 下注筹码
     double AreaTotal = 3;   // 当前区域投注总数
     double PlayerTotal = 4; // 当前玩家在此区域投注总数
     uint32 PlayerID = 5;    // 谁下的注
     double Money = 6;       // 该玩家投注后剩余金币
}

// 庄家广播，数组第一个为当前庄家，若变化，则为庄家轮换
message BankersB {
    repeated UserInfo Banker = 1; // 庄家列表，0为当前庄家，其余为上庄列表
    uint32 ServerTime = 2;        // 服务器时间
}

// 玩家广播
message PlayersB {
    repeated UserInfo Players = 1; // 玩家列表/历史
    uint32 ServerTime = 2;         // 服务器时间
}

// 上庄
message GrabBanker {}

// 自动下注
message AutoBet {}

message AutoBetR {}

// 离开房间
message LeaveRoom {}

message LeaveRoomR {}

// 错误码
enum ErrorCode {
    Success = 0;

    InsufficientBalanceGrabBanker = 101; // 上庄钱不够
    InsufficientBalanceBet = 102;        // 下注钱不够

    ServerClosed = 201;
    UserRepeatLogin = 202;
    UserRemoteLogin = 203;

    UserNotInRoom = 301;       // 玩家不在房间里
    UserAlreadyInRoom = 302;   // 玩家已经在房间里了
    RoomNotExist = 303;        // 房间不存在
    RoomFull = 304;            // 房间已经满了

    NotInBetting = 401;        // 当前不是下注状态
}

message Error {
    ErrorCode Code = 1;
    string Detail = 2;
}
