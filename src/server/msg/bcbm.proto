syntax = "proto3";
package msg;

// 消息枚举
enum MessageID {
	MsgError      = 0;
	MsgPing       = 1;
	MsgPong       = 2;
	MsgLoginTest  = 3;
	MsgLogin      = 4;
	MsgLoginR     = 5;
	MsgLogout     = 6;
	MsgLogoutR    = 7;
	MsgJoinRoom   = 8;
	MsgJoinRoomR  = 9;
	MsgLeaveRoom  = 10;
	MsgLeaveRoomR = 11;
	MsgGrabBanker = 12;
	MsgAutoBet    = 13;
	MsgAutoBetR   = 14;
	MsgBet        = 15;
	MsgBetR       = 16;
	MsgBetInfoB   = 17;
	MsgBankersB   = 18;
	MsgPlayersB   = 19;
}

// 心跳
message Ping{}
message Pong{}

// 用户信息
message UserInfo {
    uint32 UserID = 1;
    double Money = 2;
    string Avatar = 3;
    string NickName = 4;
    double BetAmount = 5; // 下注数
    uint32 WinCount = 6; // 近20局获胜局数
}

// 房间信息
message RoomInfo {
    uint32 RoomID = 1;
    double MinBet = 2;    // 限红 下限
    double MaxBet = 3;    // 限红 上限
    double MinLimit = 4;  // 能玩的最低金币
    uint32 Status = 5;
    uint32 EndTime = 6;
    repeated uint32 History = 7;
    repeated uint32 HisStatistic = 8;
}

// 房间变化大厅广播
message RoomChangeHB {
    uint32 RoomID = 1;
    uint32 Status = 2;      // 改变之后的状态
    uint32 EndTime = 3;     // 倒计时结束时间
    uint32 Result = 4;      // 开奖结果
    uint32 ServerTime = 5;  // 服务器时间
}


// 下注信息广播
message BetInfoB {
    repeated double Amount = 1; // 各区域筹码数量
    uint32 ServerTime = 2;      // 服务器时间
}

// 庄家广播
message BankersB {
    repeated UserInfo Banker = 1; // 庄家列表，0为当前庄家，其余为上庄列表
    uint32 ServerTime = 2;        // 服务器时间
}

// 玩家广播
message PlayersB {
    repeated UserInfo Players = 1; // 玩家列表/历史
    uint32 ServerTime = 2;         // 服务器时间
}

// 登录游戏
message Login {
    uint32 UserID = 1;
    string Password = 2;
}

// 测试登录
message LoginTest {
    uint32 UserID = 1;
}

message LoginR {
    UserInfo User = 1;
    uint32 RoomID = 2;
    repeated RoomInfo Rooms = 3;
    uint32 ServerTime = 4;  // 服务器时间
}

// 登出游戏
message Logout {}

message LogoutR {}

// 加入房间
message JoinRoom {
    uint32 RoomID = 1;
}

message JoinRoomR {
    repeated UserInfo CurBankers = 1;  // 当前房间庄家信息
    repeated double Amount = 2;        // 当前房间下注信息
    repeated double PAmount = 3;       // 如果玩家是重新进入房间，需要玩家在该房间的下注信息
    repeated UserInfo Players = 4;     // 当前房间的玩家信息
    uint32 ServerTime = 5;             // 服务器时间
}

// 离开房间
message LeaveRoom {}

message LeaveRoomR {}

// 上庄
message GrabBanker {}

// 下注
message Bet {
    uint32 Area = 1;
    double Amount = 2;
}

message BetR {}

// 自动下注
message AutoBet {}

message AutoBetR {}

// 错误码
enum ErrorCode {
    Success = 0;

    InsufficientBalanceGrabBanker = 101; // 上庄钱不够
    InsufficientBalanceBet = 102;        // 下注钱不够

    ServerClosed = 201;
    UserRepeatLogin = 202;
    UserRemoteLogin = 203;
}

message Error {
    ErrorCode Code = 1;
}
